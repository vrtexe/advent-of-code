import { det } from 'npm:mathjs';

function main() {
  part2();
}

export async function part1() {
  const lines = await parse();

  const [minX, minY, maxX, maxY] = [
    200000000000000, 200000000000000, 400000000000000, 400000000000000,
  ];

  const intersections: Point[] = [];

  const nextLines = lines;

  while (nextLines.length) {
    const i = nextLines.shift()!;
    const line = i.line;

    for (const next of nextLines) {
      const l = next.line;
      const [intersectionPoint, intersects] = lineIntersection(l, line);

      if (intersects && intersectionPoint) {
        const nanoSecondA = getNano(i, intersectionPoint);
        const nanoSecondB = getNano(next, intersectionPoint);

        if (
          intersectionPoint.x >= minX &&
          intersectionPoint.x <= maxX &&
          intersectionPoint.y >= minY &&
          intersectionPoint.y <= maxY &&
          nanoSecondA >= 0 &&
          nanoSecondB >= 0
        ) {
          intersections.push(intersectionPoint);
        }
      }
    }
  }

  console.log(intersections.length);
}

export async function part2() {
  const lines = await parse();

  for (let j = 1; j < lines.length - 3; j++) {
    const A: number[][] = [];
    const b: number[] = [];

    for (let i = j; i < j + 3; i++) {
      const matrixPart = buildCoefficientMatrixPart(lines[i - 1], lines[i]);
      const resultPart = buildConstantTermMatrix(lines[i - 1], lines[i]);
      A.push(...matrixPart);
      b.push(...resultPart);
    }

    const [x, y, z] = solveSystem(b, A);
    console.log(Math.floor(x) + Math.floor(y) + Math.floor(z));
    break;
  }
}

async function parse(): Promise<LineVelocity[]> {
  const lines: LineVelocity[] = [];
  const text = await Deno.readTextFile('assets/2023/task24.txt');

  text.split('\n').forEach((line: string) => {
    const [point, velocity] = line.split(' @ ');
    const pointCoords = point.split(', ');
    const velocityValues = velocity.split(', ');

    const [x, y, z] = [
      parseInt(pointCoords[0]),
      parseInt(pointCoords[1]),
      parseInt(pointCoords[2]),
    ];
    const [vx, vy, vz] = [
      parseInt(trimWhitespace(velocityValues[0])),
      parseInt(trimWhitespace(velocityValues[1])),
      parseInt(trimWhitespace(velocityValues[2])),
    ];

    const p1: Point = { x, y, z };
    const p2: Point = {
      x: x + vx * 10 ** 90,
      y: y + vy * 10 ** 90,
      z: z + vz * 100 ** 90,
    };

    lines.push({ line: { p1, p2 }, velocity: { x: vx, y: vy, z: vz } });
  });

  return lines;
}

if (import.meta.main) {
  main();
}

function solveSystem(results: number[], matrix: number[][]) {
  const nominators: number[][][] = generateCramerNominators(results, matrix);
  const denominator = det(matrix);
  const solutions: number[] = [];

  for (const nominator of nominators) {
    solutions.push(det(nominator) / denominator);
  }

  return solutions;
}

function generateCramerNominators(column: number[], matrix: number[][]) {
  const result: number[][][] = [];

  for (let i = 0; i < matrix.length; i++) {
    result.push(replaceMatrixColumn(i, column, matrix));
  }

  return result;
}

function replaceMatrixColumn(
  replaceIndex: number,
  column: number[],
  matrix: number[][],
) {
  const result: number[][] = [];
  for (let rowIndex = 0; rowIndex < matrix.length; rowIndex++) {
    const row: number[] = [];
    for (let colIndex = 0; colIndex < matrix[rowIndex].length; colIndex++) {
      row.push(
        colIndex === replaceIndex
          ? column[rowIndex]
          : matrix[rowIndex][colIndex],
      );
    }
    result.push(row);
  }
  return result;
}

function buildCoefficientMatrixPart(
  left: LineVelocity,
  right: LineVelocity,
): [number[], number[]] {
  const { line: l1, velocity: v1 } = left;
  const { x: x1, y: y1, z: z1 } = l1.p1;
  const { x: vx1, y: vy1, z: vz1 } = v1;

  const { line: l2, velocity: v2 } = right;
  const { x: x2, y: y2, z: z2 } = l2.p1;
  const { x: vx2, y: vy2, z: vz2 } = v2;

  return [
    [vy1 - vy2, vx2 - vx1, 0, y2 - y1, x1 - x2, 0],
    [vz1 - vz2, 0, vx2 - vx1, z2 - z1, 0, x1 - x2],
  ];
}

function buildConstantTermMatrix(
  left: LineVelocity,
  right: LineVelocity,
): number[] {
  const { line: l1, velocity: v1 } = left;
  const { x: x1, y: y1, z: z1 } = l1.p1;
  const { x: vx1, y: vy1, z: vz1 } = v1;

  const { line: l2, velocity: v2 } = right;
  const { x: x2, y: y2, z: z2 } = l2.p1;
  const { x: vx2, y: vy2, z: vz2 } = v2;

  return [
    x1 * vy1 - y1 * vx1 - x2 * vy2 + y2 * vx2,
    x1 * vz1 - z1 * vx1 - x2 * vz2 + z2 * vx2,
  ];
}

// 19 - 2 - 2 = 15
// x = 19 nx = 16 vx = -2  / s
// x + (s * vx) = nx
// s * vx = nx - x
// s = (nx - x) / vx

function getNano(l: LineVelocity, p: Point): number {
  return (p.x - l.line.p1.x) / l.velocity.x;
}

function trimWhitespace(s: string): string {
  return s.trim();
}

function lineIntersection(l1: Line, l2: Line): [Point | undefined, boolean] {
  const a1 = l1.p1.y - l1.p2.y;
  const b1 = l1.p1.x - l1.p2.x;
  const c1 = l1.p1.x * l1.p2.y - l1.p2.x * l1.p1.y;

  const a2 = l2.p1.y - l2.p2.y;
  const b2 = l2.p1.x - l2.p2.x;
  const c2 = l2.p1.x * l2.p2.y - l2.p2.x * l2.p1.y;

  const px_n = c1 * b2 - b1 * c2;
  const py_n = c1 * a2 - a1 * c2;
  const denominator = b1 * a2 - a1 * b2;

  if (denominator == 0) {
    return [undefined, false];
  }

  return [{ x: px_n / denominator, y: py_n / denominator, z: 0 }, true];
}

// deno-lint-ignore no-unused-vars
function segmentIntersection(
  l1: Segment,
  l2: Segment,
): [Point | undefined, boolean] {
  const [P1, P2, P3, P4] = [l1.start, l1.end, l2.start, l2.end];
  const [Ax, Ay] = [P2.x - P1.x, P2.y - P1.y];
  const [Bx, By] = [P3.x - P4.x, P3.y - P4.y];
  const [Cx, Cy] = [P1.x - P3.x, P1.y - P3.y];

  const alphaNumerator = By * Cx - Bx * Cy;
  const betaNumerator = Ax * Cy - Ay * Cx;
  const denominator = Ay * Bx - Ax * By;

  if (denominator == 0) {
    return [
      undefined,
      alphaNumerator == 0 &&
        betaNumerator == 0 &&
        onLineX(P1, P2, P3, P4) &&
        onLineY(P1, P2, P3, P4),
    ];
  }

  const [px, py] = [alphaNumerator / denominator, betaNumerator / denominator];

  return [{ x: px, y: py, z: 0 }, between(px, 0, 1) && between(py, 0, 1)];
}

function between(n: number, start: number, end: number): boolean {
  return n >= start && n <= end;
}

function onLineX(P1: Point, P2: Point, P3: Point, P4: Point): boolean {
  return (
    (P1.x >= P3.x && P1.x <= P4.x) ||
    (P2.x >= P3.x && P2.x <= P4.x) ||
    (P3.x >= P1.x && P3.x <= P2.x) ||
    (P4.x >= P1.x && P4.x <= P2.x)
  );
}

function onLineY(P1: Point, P2: Point, P3: Point, P4: Point): boolean {
  return (
    (P1.y >= P3.y && P1.y <= P4.y) ||
    (P2.y >= P3.y && P2.y <= P4.y) ||
    (P3.y >= P1.y && P3.y <= P2.y) ||
    (P4.y >= P1.y && P4.y <= P2.y)
  );
}

type Point = {
  x: number;
  y: number;
  z: number;
};

type Line = {
  p1: Point;
  p2: Point;
};

type LineVelocity = {
  line: Line;
  velocity: Point;
};

type Segment = {
  start: Point;
  end: Point;
};


var Frame = `
.....................................................................................O...............
.......O.....................................................................O.......................
............O....O...................................................................................
......................................................O.O....................................O.......
......O..............................................................................................
.....................................................................................................
.....................................................................................................
......O..............................................................................................
.....................................................................................................
........................................O..............................O...................O.........
.....................................................................................................
.....................................................................................................
................O................O...................................................................
.....................................................................................................
...............................................OO..................................................O.
......................O........O...........O.........................................................
..............................................................................O......................
.....................................................................................................
.............................................................O.......................................
...............................................................O.....................................
...............................................O......O..............................................
...........................................................................................O.........
........................................................................................O...........O
.....................................................................................................
..................................................................................................O..
.........................................................................O................O.O........
.........................O.............O.............................................................
..........................................................................O..........................
...........................................................O.....................O...................
..............................O......................................................................
.............................O...................................................O.......O...........
..............................................................................O...O..................
.....................................................................................................
.....................................................................................................
............................................O...........O..................O.........................
.O................O.....................................................................O............
............O.........O..............................................................................
.....................................O......................O........................................
...........................................................................................O.........
......O..........O...................................................................................
.......O.........O............................O..................................O.............O.....
........................................................................O............................
..................OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO....................................................
..................O.............................O..........................O.........................
..................O.............................O....................................................
............O.....O.............................O....................................................
..................O.............................O................................O...................
..................O..............O..............O....................................................
........O.........O.............OOO.............O...........O.............O..........................
..................O............OOOOO............O......................................O.............
..................O...........OOOOOOO...........O................................................O...
..................O..........OOOOOOOOO..........O.......................O............................
..................O............OOOOO............O.................................O..................
..................O...........OOOOOOO...........O......O.............................................
..................O..........OOOOOOOOO..........O.............................O.................O....
.O................O.........OOOOOOOOOOO.........O......O......................................O......
...O..............O........OOOOOOOOOOOOO........O....................................................
..................O..........OOOOOOOOO..........O....................................................
..O...............O.........OOOOOOOOOOO.........O....................................................
..................O........OOOOOOOOOOOOO........O............................O.......................
..O...............O.......OOOOOOOOOOOOOOO.......O....................................................
..................O......OOOOOOOOOOOOOOOOO......O....................................................
..................O........OOOOOOOOOOOOO........O...........................O........................
..................O.......OOOOOOOOOOOOOOO.......O...................O................................
..................O......OOOOOOOOOOOOOOOOO......O..................O.................................
..................O.....OOOOOOOOOOOOOOOOOOO.....O...........O........................................
..................O....OOOOOOOOOOOOOOOOOOOOO....O.O...............O..................................
..................O.............OOO.............O....................................................
..O..O............O.............OOO.............O................................................O...
O.................O.............OOO.............O.......O......O.........O...........................
..................O.............................O....................................................
..................O.............................O................................................OO..
..................O.............................O.................................O.........O........
..................O.............................O....................................................
..................OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO.....................................O..............
.....................................................................................................
......O...............O............................O.................................................
..........................................................O......................................O...
....................................................................................O................
............................................O..........................................O.............
....O................................................................................................
.....................................................................................O...............
............................O.........OO.............................O...............................
.....................................................................................................
.....................................................................................................
...........................O.........................................................................
...........O................................................................................O........
..............................O..............................O...........O.......................O...
.......O.........O...........O.......................O...............................................
........O............................................................................................
.................O.............................................................O.....................
...................................................O.................................................
.....................................................................................................
.................................................O...................................................
...................................................................................O.................
..................O........................................O.........................................
........................................................O............................................
......................................O............O....................O.........................O..
..................................O....................................O.............................
................O....................................................................O............O..
..........O..........................................................................................
.....................................................................................................
...O.........................................................O.......................................`